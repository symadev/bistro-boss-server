; app.get('/order-stats',  async (req, res) => {
; ЁЯСЙ ржПржЯрж╛ ржПржХржЯрж╛ GET API routeред ржпржЦржи ржХрзЗржЙ /order-stats path-ржП request ржкрж╛ржарж╛ржмрзЗ, рждржЦржи ржирж┐ржЪрзЗрж░ aggregation pipeline ржЪрж▓ржмрзЗред

; js
; Copy
; Edit
; const result = await paymentCollection.aggregate([
; ЁЯСЙ paymentCollection ржПрж░ ржЙржкрж░ MongoDB-ржПрж░ aggregation pipeline ржЪрж╛рж▓рж╛ржирзЛ рж╣ржЪрзНржЫрзЗред ржПржЗ collection-ржП menuItemIds ржирж╛ржорзЗ array ржЖржЫрзЗ, ржпрзЗржЯрж╛рждрзЗ ржЗржЙржЬрж╛рж░ ржХрзЛржи ржХрзЛржи ржорзЗржирзБ ржЖржЗржЯрзЗржо ржХрж┐ржирзЗржЫрзЗ рждрж╛рж░ ID ржЧрзБрж▓рзЛ ржерж╛ржХрзЗред

; 1я╕ПтГг $unwind: '$menuItemIds'
; js
; Copy
; Edit
; {
;   $unwind: '$menuItemIds'
; }
; ЁЯСЙ menuItemIds рж╣ржЪрзНржЫрзЗ ржПржХржЯрж╛ arrayред $unwind ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрзНрж░рждрж┐ржЯрж╛ ID ржХрзЗ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ ржлрзЗрж▓ржЫрзЗ, ржпрзЗржи ржЖржорж░рж╛ ржкрзНрж░рждрж┐ржЯрж╛ ржорзЗржирзБ ржЖржЗржЯрзЗржорзЗрж░ ржЬржирзНржп ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рж┐ред

; 2я╕ПтГг $lookup
; js
; Copy
; Edit
; {
;   $lookup: {
;     from: 'menu',
;     localField: 'menuItemIds',
;     foreignField: '_id',
;     as: 'menuItems'
;   }
; }
; ЁЯСЙ ржПржЯрж╛ MongoDB-ржПрж░ "join" ржПрж░ ржорждрзЛ ржХрж╛ржЬ ржХрж░рзЗред menuItemIds ржПрж░ ржкрзНрж░рждрж┐ржЯрж╛ ID ржПрж░ рж╕рж╛ржерзЗ menu collection-ржПрж░ _id ржорж┐рж▓рж┐рзЯрзЗ рж╕рзЗржЗ ржорзЗржирзБ ржЖржЗржЯрзЗржорзЗрж░ ржкрзБрж░рзЛ ржбрзЗржЯрж╛ ржирж┐рзЯрзЗ ржЖрж╕ржЫрзЗред

; from: ржХрзЛржи collection ржерзЗржХрзЗ ржбрзЗржЯрж╛ ржЖржиржмрзЗ (menu)

; localField: ржпрзЗржЯрж╛ paymentCollection ржПрж░ ржлрж┐рж▓рзНржб (menuItemIds)

; foreignField: ржпрзЗржЯрж╛ menu ржПрж░ _id

; as: ржЖржирж╛ржо ржбрзЗржЯрж╛рж░ ржирж╛ржо menuItems

; 3я╕ПтГг $unwind: '$menuItems'
; ЁЯСЙ ржЖржЧрзЗрж░ рж╕рзНржЯрзЗржкрзЗ menuItems ржирж╛ржорзЗ ржПржХржЯрж╛ array ржПрж╕рзЗржЫрж┐рж▓рзЛ, ржХрж╛рж░ржг lookup рж╕ржмрж╕ржорзЯ array ржлрзЗрж░ржд ржжрзЗрзЯред ржПржЦржи рж╕рзЗржЯрж╛ ржЖржмрж╛рж░ ржЖрж▓рж╛ржжрж╛ document ржП ржнрзЗржЩрзЗ ржлрзЗрж▓рж╛ рж╣ржЪрзНржЫрзЗред

; 4я╕ПтГг $group
; js
; Copy
; Edit
; {
;   $group: {
;     _id: '$menuItems.category',
;     quantity: { $sum: 1 },
;     Revenue: { $sum: '$menuItems.price' }
;   }
; }
; ЁЯСЙ ржПржЦржи рж╕ржм menuItems ржХрзЗ category ржЕржирзБржпрж╛рзЯрзА ржЧрзНрж░рзБржк ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред

; _id: ржЧрзНрж░рзБржкрзЗрж░ ржнрж┐рждрзНрждрж┐ рж╣ржЪрзНржЫрзЗ menuItems.category

; quantity: ржкрзНрж░рждрж┐ржЯрж╛ ржорзЗржирзБ ржЖржЗржЯрзЗржо ржЧржгржирж╛ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ (ржПржХржЯрж╛ ржХрж░рзЗ $sum: 1)

; Revenue: ржкрзНрж░рждрж┐ржЯрж╛ ржорзЗржирзБ ржЖржЗржЯрзЗржорзЗрж░ price ржЧрзБрж▓рзЛ ржпрзЛржЧ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ

; 5я╕ПтГг $project
; js
; Copy
; Edit
; {
;   $project: {
;     _id: 0,
;     category: '$_id',
;     quantity: 1,
;     Revenue: 1
;   }
; }
; ЁЯСЙ ржПржЦрж╛ржирзЗ рж╢рзБржзрзБ ржкрзНрж░рж╛рж╕ржЩрзНржЧрж┐ржХ ржбрзЗржЯрж╛ рж░рж╛ржЦрж╛ рж╣ржЪрзНржЫрзЗ:

; _id: 0: _id ржлрж┐рж▓рзНржб ржмрж╛ржж ржжрзЗрзЯрж╛ рж╣рзЯрзЗржЫрзЗ

; category: ржЧрзНрж░рзБржкрзЗрж░ _id ржХрзЗ category ржирж╛ржорзЗ рж░рж╛ржЦрж╛ рж╣рзЯрзЗржЫрзЗ

; quantity, Revenue: ржЖржЧрзЗрж░ рж╕рзНржЯрзЗржк ржерзЗржХрзЗ ржПрж╕рзЗржЫрзЗ

; тЬЕ рж╢рзЗрж╖рзЗ:
; js
; Copy
; Edit
; res.send(result);
; ЁЯСЙ ржлрж▓рж╛ржлрж▓ржЯрж╛ рж░рзЗрж╕ржкржирзНрж╕ рж╣рж┐рж╕рзЗржмрзЗ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯржХрзЗ ржкрж╛ржарж╛ржирзЛ рж╣ржЪрзНржЫрзЗред

; ЁЯз╛ ржПржХ ржиржЬрж░рзЗ ржХрж┐ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ:
; json
; Copy
; Edit
; [
;   { "category": "Pizza", "quantity": 35, "Revenue": 3500 },
;   { "category": "Salad", "quantity": 20, "Revenue": 1400 },
;   { "category": "Dessert", "quantity": 30, "Revenue": 2100 }
; ]
; ржПржЗ ржбрзЗржЯрж╛ ржжрж┐рзЯрзЗ рждрзБржорж┐ ржмрж╛рж░ ржЪрж╛рж░рзНржЯ, ржкрж╛ржЗ ржЪрж╛рж░рзНржЯ ржмрж╛ ржЕржирзНржп visualization ржмрж╛ржирж╛рждрзЗ ржкрж╛рж░рзЛред